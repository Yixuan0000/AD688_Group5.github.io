[
  {
    "objectID": "ml_methods.html",
    "href": "ml_methods.html",
    "title": "Multiple Linear Regression - Salary Predition",
    "section": "",
    "text": "LAST_UPDATED_DATE\nPOSTED\nEXPIRED\nDURATION\nSOURCE_TYPES\nSOURCES\nACTIVE_SOURCES_INFO\nTITLE_RAW\nBODY\nMODELED_EXPIRED\n...\nLOT_V6_OCCUPATION\nLOT_V6_OCCUPATION_NAME\nLOT_V6_OCCUPATION_GROUP\nLOT_V6_OCCUPATION_GROUP_NAME\nLOT_V6_CAREER_AREA\nLOT_V6_CAREER_AREA_NAME\nLIGHTCAST_SECTORS\nLIGHTCAST_SECTORS_NAME\nNAICS_2022_6\nNAICS_2022_6_NAME\n\n\n\n\n0\n2024-09-06\n2024-06-02\n2024-06-08\n6.0\n[\\n \"Company\"\\n]\n[\\n \"brassring.com\"\\n]\nUnknown\nEnterprise Analyst (II-III)\n31-May-2024\\n\\nEnterprise Analyst (II-III)\\n\\n...\n2024-06-08\n...\n231010.0\nBusiness Intelligence Analyst\n2310.0\nBusiness Intelligence\n23.0\nInformation Technology and Computer Science\n[\\n 7\\n]\n[\\n \"Artificial Intelligence\"\\n]\n441330.0\nAutomotive Parts and Accessories Retailers\n\n\n1\n2024-08-02\n2024-06-02\n2024-08-01\n-1.0\n[\\n \"Job Board\"\\n]\n[\\n \"maine.gov\"\\n]\nUnknown\nOracle Consultant - Reports (3592)\nOracle Consultant - Reports (3592)\\n\\nat SMX i...\n2024-08-01\n...\n231010.0\nBusiness Intelligence Analyst\n2310.0\nBusiness Intelligence\n23.0\nInformation Technology and Computer Science\nUnknown\nUnknown\n561320.0\nTemporary Help Services\n\n\n2\n2024-09-06\n2024-06-02\n2024-07-07\n35.0\n[\\n \"Job Board\"\\n]\n[\\n \"dejobs.org\"\\n]\nUnknown\nData Analyst\nTaking care of people is at the heart of every...\n2024-06-10\n...\n231113.0\nData / Data Mining Analyst\n2311.0\nData Analysis and Mathematics\n23.0\nInformation Technology and Computer Science\nUnknown\nUnknown\n524291.0\nClaims Adjusting\n\n\n3\n2024-09-06\n2024-06-02\n2024-07-20\n48.0\n[\\n \"Job Board\"\\n]\n[\\n \"disabledperson.com\",\\n \"dejobs.org\"\\n]\nUnknown\nSr. Lead Data Mgmt. Analyst - SAS Product Owner\nAbout this role:\\n\\nWells Fargo is looking for...\n2024-06-12\n...\n231113.0\nData / Data Mining Analyst\n2311.0\nData Analysis and Mathematics\n23.0\nInformation Technology and Computer Science\n[\\n 6\\n]\n[\\n \"Data Privacy/Protection\"\\n]\n522110.0\nCommercial Banking\n\n\n4\n2024-06-19\n2024-06-02\n2024-06-17\n15.0\n[\\n \"FreeJobBoard\"\\n]\n[\\n \"craigslist.org\"\\n]\nUnknown\nComisiones de $1000 - $3000 por semana... Comi...\nComisiones de $1000 - $3000 por semana... Comi...\n2024-06-17\n...\n231010.0\nBusiness Intelligence Analyst\n2310.0\nBusiness Intelligence\n23.0\nInformation Technology and Computer Science\nUnknown\nUnknown\n999999.0\nUnclassified Industry\n\n\n\n\n5 rows × 99 columns\n\n\n\n\ndf[\"exp_mid\"] = df[[\"MIN_YEARS_EXPERIENCE\", \"MAX_YEARS_EXPERIENCE\"]].mean(axis=1)\n\ndf[\"skill_count\"] = df[\"SPECIALIZED_SKILLS_NAME\"].fillna(\"\").str.count(\",\") + 1\n\ndf[\"has_python\"] = df[\"SPECIALIZED_SKILLS_NAME\"].str.contains(\"Python\", case=False, na=False).astype(int)\n\ndf[\"edu_ge_bachelors\"] = df[\"MIN_EDULEVELS_NAME\"].isin(\n    [\"Bachelor's Degree\", \"Master's Degree\", \"Doctoral Degree\"]\n).astype(int)\n\nkeep_num  = [\"exp_mid\", \"MODELED_DURATION\", \"skill_count\",\n             \"has_python\", \"edu_ge_bachelors\"]\n\nkeep_cat  = [\"EMPLOYMENT_TYPE_NAME\", \"REMOTE_TYPE_NAME\",\n             \"STATE_NAME\", \n             \"SOC_2021_4_NAME\"]\n\ndf_model = (\n    df.dropna(subset=[\"SALARY\"])      \n      .loc[:, keep_num + keep_cat + [\"SALARY\"]]  \n)\n\n\n\n\ndf_dummies = pd.get_dummies(\n    df_model,\n    columns = keep_cat,   \n    drop_first = True,   \n    dtype = float        \n)\n\n\n\n(69197, 65)\nexp_mid                                          float64\nMODELED_DURATION                                 float64\nskill_count                                        int64\nhas_python                                         int64\nedu_ge_bachelors                                   int64\nSALARY                                           float64\nEMPLOYMENT_TYPE_NAME_Part-time (â‰¤ 32 hours)    float64\nEMPLOYMENT_TYPE_NAME_Part-time / full-time       float64\nEMPLOYMENT_TYPE_NAME_Unknown                     float64\nREMOTE_TYPE_NAME_Not Remote                      float64\ndtype: object\n\n\n\n# Drop salary to form features\nX = df_dummies.drop('SALARY', axis = 1)\ny = df_dummies['SALARY']\n\nX_train, X_test, y_train, y_test = train_test_split(X, y ,test_size = 0.3, random_state = 688)\n\n\nmodel = LinearRegression()\nmodel.fit(X_train, y_train)\n\nLinearRegression()In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.LinearRegression?Documentation for LinearRegressioniFittedLinearRegression() \n\n\n\ny_pred = model.predict(X_test)\npd.Series(y_pred).describe()\n\ncount     20760.000000\nmean     116664.709313\nstd        8823.326625\nmin       88915.549257\n25%      109986.421210\n50%      115526.297778\n75%      122322.598915\nmax      162697.017874\ndtype: float64\n\n\n\nrmse = mean_squared_error(y_test, y_pred)\nr2 = r2_score(y_test, y_pred)\n\nprint(f\"RMSE: {rmse:.2f}\")\nprint(f\"R-squared: {r2:.4f}\")\n\nRMSE: 806270301.14\nR-squared: 0.0835\n\n\n\ncoef_df = pd.DataFrame({\n    \"Feature\": X.columns,\n    \"Coefficient\": model.coef_\n}).sort_values(by=\"Coefficient\", ascending=False)\n\ncoef_df.head(10)\n\n\n\n\n\n\n\n\nFeature\nCoefficient\n\n\n\n\n15\nSTATE_NAME_California\n5523.409945\n\n\n56\nSTATE_NAME_Vermont\n4888.287503\n\n\n58\nSTATE_NAME_Washington\n4787.245034\n\n\n17\nSTATE_NAME_Connecticut\n4712.782602\n\n\n54\nSTATE_NAME_Unknown\n3654.403083\n\n\n10\nREMOTE_TYPE_NAME_Unknown\n3654.403083\n\n\n63\nSOC_2021_4_NAME_Unknown\n3654.403083\n\n\n7\nEMPLOYMENT_TYPE_NAME_Unknown\n3654.403083\n\n\n11\nREMOTE_TYPE_NAME_[None]\n3632.409623\n\n\n0\nexp_mid\n3283.749277\n\n\n\n\n\n\n\n\ncoef_cleaned = coef_df[~coef_df[\"Feature\"].str.contains(\n    r\"Unknown|\\[None\\]\",  \n    na=False              \n)]\n\ncoef_cleaned.head(10)\n\n\n\n\n\n\n\n\nFeature\nCoefficient\n\n\n\n\n15\nSTATE_NAME_California\n5523.409945\n\n\n56\nSTATE_NAME_Vermont\n4888.287503\n\n\n58\nSTATE_NAME_Washington\n4787.245034\n\n\n17\nSTATE_NAME_Connecticut\n4712.782602\n\n\n0\nexp_mid\n3283.749277\n\n\n40\nSTATE_NAME_New Jersey\n3270.062452\n\n\n9\nREMOTE_TYPE_NAME_Remote\n3195.425973\n\n\n23\nSTATE_NAME_Illinois\n2916.728814\n\n\n57\nSTATE_NAME_Virginia\n2914.805142\n\n\n14\nSTATE_NAME_Arkansas\n2838.622475"
  },
  {
    "objectID": "ml_methods.html#coefficient-bar-chart",
    "href": "ml_methods.html#coefficient-bar-chart",
    "title": "Multiple Linear Regression - Salary Predition",
    "section": "2.1 Coefficient bar chart",
    "text": "2.1 Coefficient bar chart"
  },
  {
    "objectID": "ml_methods.html#actual-vs.-predicted",
    "href": "ml_methods.html#actual-vs.-predicted",
    "title": "Multiple Linear Regression - Salary Predition",
    "section": "2.2 Actual vs. Predicted",
    "text": "2.2 Actual vs. Predicted"
  },
  {
    "objectID": "ml_methods.html#residual-histogram",
    "href": "ml_methods.html#residual-histogram",
    "title": "Multiple Linear Regression - Salary Predition",
    "section": "2.3 Residual histogram",
    "text": "2.3 Residual histogram"
  },
  {
    "objectID": "ml_methods.html#rank-importance",
    "href": "ml_methods.html#rank-importance",
    "title": "Multiple Linear Regression - Salary Predition",
    "section": "3.1 Rank Importance",
    "text": "3.1 Rank Importance"
  },
  {
    "objectID": "ml_methods.html#elbow-plot",
    "href": "ml_methods.html#elbow-plot",
    "title": "Multiple Linear Regression - Salary Predition",
    "section": "4.1 Elbow Plot",
    "text": "4.1 Elbow Plot\n\n\n\n# From the elbow Plot, we take k = 4\nkmeans = KMeans(n_clusters=4, n_init=10, random_state=688)\n\ncluster_labels = kmeans.fit_predict(X_scaled)\n\ndf['cluster'] = cluster_labels\n\n\nprint(df['cluster'].value_counts().sort_index())\n\ncluster\n0      811\n1    54474\n2       16\n3    13896\nName: count, dtype: int64"
  },
  {
    "objectID": "ml_methods.html#feature-engineering",
    "href": "ml_methods.html#feature-engineering",
    "title": "Multiple Linear Regression - Salary Predition",
    "section": "",
    "text": "df_dummies = pd.get_dummies(\n    df_model,\n    columns = keep_cat,   \n    drop_first = True,   \n    dtype = float        \n)\n\n\n\n(69197, 65)\nexp_mid                                          float64\nMODELED_DURATION                                 float64\nskill_count                                        int64\nhas_python                                         int64\nedu_ge_bachelors                                   int64\nSALARY                                           float64\nEMPLOYMENT_TYPE_NAME_Part-time (â‰¤ 32 hours)    float64\nEMPLOYMENT_TYPE_NAME_Part-time / full-time       float64\nEMPLOYMENT_TYPE_NAME_Unknown                     float64\nREMOTE_TYPE_NAME_Not Remote                      float64\ndtype: object\n\n\n\n# Drop salary to form features\nX = df_dummies.drop('SALARY', axis = 1)\ny = df_dummies['SALARY']\n\nX_train, X_test, y_train, y_test = train_test_split(X, y ,test_size = 0.3, random_state = 688)\n\n\nmodel = LinearRegression()\nmodel.fit(X_train, y_train)\n\nLinearRegression()In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.LinearRegression?Documentation for LinearRegressioniFittedLinearRegression() \n\n\n\ny_pred = model.predict(X_test)\npd.Series(y_pred).describe()\n\ncount     20760.000000\nmean     116664.709313\nstd        8823.326625\nmin       88915.549257\n25%      109986.421210\n50%      115526.297778\n75%      122322.598915\nmax      162697.017874\ndtype: float64\n\n\n\nrmse = mean_squared_error(y_test, y_pred)\nr2 = r2_score(y_test, y_pred)\n\nprint(f\"RMSE: {rmse:.2f}\")\nprint(f\"R-squared: {r2:.4f}\")\n\nRMSE: 806270301.14\nR-squared: 0.0835\n\n\n\ncoef_df = pd.DataFrame({\n    \"Feature\": X.columns,\n    \"Coefficient\": model.coef_\n}).sort_values(by=\"Coefficient\", ascending=False)\n\ncoef_df.head(10)\n\n\n\n\n\n\n\n\nFeature\nCoefficient\n\n\n\n\n15\nSTATE_NAME_California\n5523.409945\n\n\n56\nSTATE_NAME_Vermont\n4888.287503\n\n\n58\nSTATE_NAME_Washington\n4787.245034\n\n\n17\nSTATE_NAME_Connecticut\n4712.782602\n\n\n54\nSTATE_NAME_Unknown\n3654.403083\n\n\n10\nREMOTE_TYPE_NAME_Unknown\n3654.403083\n\n\n63\nSOC_2021_4_NAME_Unknown\n3654.403083\n\n\n7\nEMPLOYMENT_TYPE_NAME_Unknown\n3654.403083\n\n\n11\nREMOTE_TYPE_NAME_[None]\n3632.409623\n\n\n0\nexp_mid\n3283.749277\n\n\n\n\n\n\n\n\ncoef_cleaned = coef_df[~coef_df[\"Feature\"].str.contains(\n    r\"Unknown|\\[None\\]\",  \n    na=False              \n)]\n\ncoef_cleaned.head(10)\n\n\n\n\n\n\n\n\nFeature\nCoefficient\n\n\n\n\n15\nSTATE_NAME_California\n5523.409945\n\n\n56\nSTATE_NAME_Vermont\n4888.287503\n\n\n58\nSTATE_NAME_Washington\n4787.245034\n\n\n17\nSTATE_NAME_Connecticut\n4712.782602\n\n\n0\nexp_mid\n3283.749277\n\n\n40\nSTATE_NAME_New Jersey\n3270.062452\n\n\n9\nREMOTE_TYPE_NAME_Remote\n3195.425973\n\n\n23\nSTATE_NAME_Illinois\n2916.728814\n\n\n57\nSTATE_NAME_Virginia\n2914.805142\n\n\n14\nSTATE_NAME_Arkansas\n2838.622475"
  }
]